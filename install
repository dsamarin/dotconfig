#!/bin/bash

# Global color variables using tput
color_reset=$(tput sgr0)      # Reset color
color_command=$(tput bold) # Bold for the command
color_heading=$(tput bold; tput setaf 7; tput setab 1) # Bold, white text with red background
color_warning=$(tput setaf 3) # Yellow for warnings

# Function to echo and run a command with style
run() {
  # Print a heading for the command
  echo -e "${color_heading} RUN ${color_reset} ${color_command}$*${color_reset}"

  # Run the command
  "$@"
}

update_shell() {
  local new_shell="$1"

  # Check if the current shell is not the desired one
  if [[ "$SHELL" != "$new_shell" ]]; then
    # Update shell
    run chsh -s "$new_shell"
  else
    echo "The shell is already $new_shell."
  fi
}

REPO="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

DEBIAN_PACKAGES="git tmux zsh"
PACMAN_PACKAGES="git tmux zsh"

PLATFORM="linux32"
if [[ "$(uname -m)" == *"64" ]]; then
	PLATFORM="linux64"
fi
if [[ "$(uname -m)" == "arm"* ]]; then
	PLATFORM="linux-arm"
fi

files=(.gitconfig .zshrc .zshrc.d .ssh/config .ssh/authorized_keys .tmux.conf)
files_len=${#files[*]}

# Make common directories
mkdir -p $HOME/bin $HOME/pkg $HOME/src $HOME/tmp

# For each file in the file list
for ((i=0; i<files_len; i++)); do

	# If file already exists
	if [[ -h "$HOME/${files[i]}" || -e "$HOME/${files[i]}" ]]; then

		# Prompt to delete it
		while true; do
			read -p "Do you wish to remove $HOME/${files[i]}? "
			case $REPLY in
				[Yy]* ) rm -rf "$HOME/${files[i]}"; break;;
				[Nn]* ) continue 2;;
				* ) echo "Please answer yes or no.";;
			esac
		done
	fi

	# Create a symlink
	run ln -s "$REPO/${files[i]}" "$HOME/${files[i]}"
done

# Install package software
if [[ -e '/usr/bin/apt' ]]; then
	run sudo apt install $DEBIAN_PACKAGES
fi
if [[ -e '/usr/bin/pacman' ]]; then
	run sudo pacman --sync --needed $PACMAN_PACKAGES
fi

update_shell /bin/zsh
